/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import DataBase.BinaryFileController;
import DataBase.SaveAndReaderBinary;
import cargaDeDatos.Estudiante;
import cargaDeDatos.Lector;
import cargaDeDatos.Prestamo;
import java.io.File;
import javax.swing.JFileChooser;
import persistenciaDatos.PersistenciaDeDatos;
import static persistenciaDatos.PersistenciaDeDatos.estudiantes;
import static persistenciaDatos.PersistenciaDeDatos.prestamos;

/**
 *
 * @author Kenny
 */
public class CargarDatos extends javax.swing.JFrame {

    private BinaryFileController controlBinario = new BinaryFileController();
    private SaveAndReaderBinary LyE = new SaveAndReaderBinary();

    /**
     * Creates new form CargarDatos
     */
    public CargarDatos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Ahora no");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cargar Datos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Haga clic en cargar datos si desea cargar un archivo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(116, 116, 116))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LyE.leerArchivoBinario();
        cargarDatosReportes();
        VentanaPrincipal principal = new VentanaPrincipal();
        principal.setVisible(true);
        principal.setLocationRelativeTo(null);
        principal.setResizable(false);
        this.dispose();
        //metodo para leer el archivo binario

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //metodo para cargar datos
        abrirFileChooser();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void abrirFileChooser() {
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        File archivo = jf.getSelectedFile();
        Lector lector = new Lector();
        if (archivo != null || !archivo.getName().equals("")) {

            //leer(archivo.getAbsolutePath());
            lector.leer(archivo, PersistenciaDeDatos.biblio, PersistenciaDeDatos.estudiantes, PersistenciaDeDatos.prestamos);
            //System.out.println(controlBinario.convertirATextoDeArray(PersistenciaDeDatos.estudiantes, PersistenciaDeDatos.biblio, PersistenciaDeDatos.prestamos));
            cargarDatosReportes();
            LyE.guardarArchivoBinario();
            PersistenciaDeDatos.vaciarListas();
        }

    }

    public void cargarDatosReportes() {
        for (Prestamo prestamo : PersistenciaDeDatos.prestamos) {
            int carnet = Integer.parseInt(prestamo.getCarnetE());
            for (Estudiante estudiante : PersistenciaDeDatos.estudiantes) {
                if (estudiante.getCarnet() == carnet) {
                    /*
                    if (estudiante.getHistorial().isEmpty()) {
                        estudiante.getHistorial().add(prestamo);
                    } else {

                        for (Prestamo prestamo1 : estudiante.getHistorial()) {
                            if (!prestamo.equals(prestamo1)) {
                                estudiante.getHistorial().add(prestamo);
                                break;
                            }
                        }
                    }
                    */
                    if (estudiante.getPrestamosActivos().isEmpty()) {
                        estudiante.getPrestamosActivos().add(prestamo);
                    } else {
                        for (Prestamo prestamoActivo : estudiante.getPrestamosActivos()) {
                            if (!prestamo.equals(prestamoActivo)) {
                                estudiante.getPrestamosActivos().add(prestamo);
                                break;
                            }
                        }
                    }

                }
            }

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
