/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import DataBase.SaveAndReaderBinary;
import Reportes.Reporte;
import cargaDeDatos.Estudiante;
import cargaDeDatos.Libro;
import cargaDeDatos.Prestamo;
import java.awt.event.ActionEvent;
import java.text.ParseException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import persistenciaDatos.ControlDatosEstudiante;
import persistenciaDatos.ControlDatosLibros;
import persistenciaDatos.ControlDePrestamos;
import persistenciaDatos.PersistenciaDeDatos;
import vista.regresoDeLibro;

/**
 *
 * @author Kenny
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    Estudiante estudianteEdit;
    Libro libroEdit;
    private Reporte reporte;
    private int carrera = 1;

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        reporte = new Reporte();
        initComponents();
        ControlDatosEstudiante controlDatosEstudiante = new ControlDatosEstudiante();
        ControlDatosLibros controlDatosLibros = new ControlDatosLibros();
        ControlDePrestamos controlPrestamos = new ControlDePrestamos();
        this.editarEstudianteBt.setEnabled(false);
        this.eliminarEstudianteBt.setEnabled(false);
        this.editarLibro.setEnabled(false);
        this.eliminarLibro.setEnabled(false);
        this.eliminarPrestamosBt.setEnabled(false);
        controlDatosEstudiante.llenarTablaEstudiantes(this.tablaStudents);
        controlDatosLibros.llenarTablaLibros(this.tablaLibros);
        controlPrestamos.llenarTablaPrestamos(tablaPrestamos);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        nuevoEstudiante = new javax.swing.JButton();
        editarEstudianteBt = new javax.swing.JButton();
        eliminarEstudianteBt = new javax.swing.JButton();
        estudiantesBusqueda = new javax.swing.JTextField();
        labelBusqueda = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaStudents = new javax.swing.JTable();
        busqueaComboEstudiantes = new javax.swing.JComboBox<>();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jDesktopPane5 = new javax.swing.JDesktopPane();
        nuevoLibroButton = new javax.swing.JButton();
        editarLibro = new javax.swing.JButton();
        eliminarLibro = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        labelBusquedaLibro = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        librosCombo = new javax.swing.JComboBox<>();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jDesktopPane6 = new javax.swing.JDesktopPane();
        nuevoPrestamosBt = new javax.swing.JButton();
        eliminarPrestamosBt = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        labelBusquedaPestamo = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaPrestamos = new javax.swing.JTable();
        busquedaComboBox = new javax.swing.JComboBox<>();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        textPaneCarnet = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        historial = new javax.swing.JButton();
        activos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        date1 = new com.toedter.calendar.JDateChooser();
        date2 = new com.toedter.calendar.JDateChooser();
        carreras = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        date11 = new com.toedter.calendar.JDateChooser();
        date22 = new com.toedter.calendar.JDateChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        fondos = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        nuevoEstudiante.setText("Nuevo");
        nuevoEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoEstudianteActionPerformed(evt);
            }
        });

        editarEstudianteBt.setText("Editar");
        editarEstudianteBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarEstudianteBtActionPerformed(evt);
            }
        });

        eliminarEstudianteBt.setText("Eliminar");
        eliminarEstudianteBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarEstudianteBtActionPerformed(evt);
            }
        });

        estudiantesBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estudiantesBusquedaActionPerformed(evt);
            }
        });

        labelBusqueda.setText("Busqueda");

        tablaStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "1212", "1212", "1212"},
                {"2", "232", "2323", "2323"},
                {"23", "2323", "343", "dews"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Carnet", "Nombre", "Carrera", "Fecha de Nacimiento"
            }
        ));
        tablaStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaStudentsMouseClicked(evt);
            }
        });
        tablaStudents.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaStudentsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaStudents);

        busqueaComboEstudiantes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Busqueda", "Todos Los Registros", "Carnet", "Nombre", "Carrera", "Fecha De Nacimiento" }));
        busqueaComboEstudiantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busqueaComboEstudiantesActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(nuevoEstudiante, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(editarEstudianteBt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(eliminarEstudianteBt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(estudiantesBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(labelBusqueda, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(busqueaComboEstudiantes, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(nuevoEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(editarEstudianteBt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(eliminarEstudianteBt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(estudiantesBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(busqueaComboEstudiantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoEstudiante)
                    .addComponent(editarEstudianteBt)
                    .addComponent(eliminarEstudianteBt))
                .addGap(28, 28, 28)
                .addComponent(labelBusqueda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estudiantesBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(busqueaComboEstudiantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Estudiantes", jDesktopPane1);

        nuevoLibroButton.setText("Nuevo");
        nuevoLibroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoLibroButtonActionPerformed(evt);
            }
        });

        editarLibro.setText("Editar");
        editarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarLibroActionPerformed(evt);
            }
        });

        eliminarLibro.setText("Eliminar");
        eliminarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarLibroActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        labelBusquedaLibro.setText("Busqueda");

        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "1212", "1212", "1212", null, null},
                {"2", "232", "2323", "2323", null, null},
                {"23", "2323", "343", "dews", null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Autor", "Código", "Cantidad de Copias", "Fercha de Publicación", "Editorial"
            }
        ));
        tablaLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaLibrosMouseClicked(evt);
            }
        });
        tablaLibros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaLibrosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaLibros);
        if (tablaLibros.getColumnModel().getColumnCount() > 0) {
            tablaLibros.getColumnModel().getColumn(3).setHeaderValue("Cantidad de Copias");
            tablaLibros.getColumnModel().getColumn(4).setHeaderValue("Fercha de Publicación");
            tablaLibros.getColumnModel().getColumn(5).setHeaderValue("Editorial");
        }

        librosCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Busqueda", "Todos Los Registros", "Titulo", "Autor", "Código", "Cantidad de Copias", "Feche de Publicación", "Editorial" }));
        librosCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                librosComboActionPerformed(evt);
            }
        });

        jDesktopPane5.setLayer(nuevoLibroButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(editarLibro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(eliminarLibro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(jTextField2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(labelBusquedaLibro, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane5.setLayer(librosCombo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane5Layout = new javax.swing.GroupLayout(jDesktopPane5);
        jDesktopPane5.setLayout(jDesktopPane5Layout);
        jDesktopPane5Layout.setHorizontalGroup(
            jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane5Layout.createSequentialGroup()
                .addGroup(jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(librosCombo, 0, 1, Short.MAX_VALUE))
                    .addGroup(jDesktopPane5Layout.createSequentialGroup()
                        .addGroup(jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane5Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jDesktopPane5Layout.createSequentialGroup()
                                        .addComponent(nuevoLibroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(editarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(86, 86, 86)
                                        .addComponent(eliminarLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelBusquedaLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jDesktopPane5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDesktopPane5Layout.setVerticalGroup(
            jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoLibroButton)
                    .addComponent(editarLibro)
                    .addComponent(eliminarLibro))
                .addGap(28, 28, 28)
                .addComponent(labelBusquedaLibro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(librosCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jDesktopPane2.setLayer(jDesktopPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 892, Short.MAX_VALUE)
            .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                    .addContainerGap(67, Short.MAX_VALUE)
                    .addComponent(jDesktopPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(67, Short.MAX_VALUE)))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 592, Short.MAX_VALUE)
            .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDesktopPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Libros", jDesktopPane2);

        nuevoPrestamosBt.setText("Nuevo");
        nuevoPrestamosBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoPrestamosBtActionPerformed(evt);
            }
        });

        eliminarPrestamosBt.setText("Regreso de Libro");
        eliminarPrestamosBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarPrestamosBtMouseClicked(evt);
            }
        });
        eliminarPrestamosBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPrestamosBtActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        labelBusquedaPestamo.setText("Busqueda");

        tablaPrestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "1212", "1212"},
                {"2", "232", "2323"},
                {"23", "2323", "343"},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CódigoLibro", "Carnet", "Fecha"
            }
        ));
        tablaPrestamos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPrestamosMouseClicked(evt);
            }
        });
        tablaPrestamos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaPrestamosKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(tablaPrestamos);

        jDesktopPane6.setLayer(nuevoPrestamosBt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane6.setLayer(eliminarPrestamosBt, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane6.setLayer(jTextField3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane6.setLayer(labelBusquedaPestamo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane6.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane6Layout = new javax.swing.GroupLayout(jDesktopPane6);
        jDesktopPane6.setLayout(jDesktopPane6Layout);
        jDesktopPane6Layout.setHorizontalGroup(
            jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane6Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane6Layout.createSequentialGroup()
                        .addComponent(nuevoPrestamosBt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(295, 295, 295)
                        .addComponent(eliminarPrestamosBt, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelBusquedaPestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jDesktopPane6Layout.setVerticalGroup(
            jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane6Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoPrestamosBt)
                    .addComponent(eliminarPrestamosBt))
                .addGap(28, 28, 28)
                .addComponent(labelBusquedaPestamo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        busquedaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Busqueda", "Todos Los Registros", "Codigo del Libro", "Carnet", "Fecha" }));
        busquedaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaComboBoxActionPerformed(evt);
            }
        });

        jDesktopPane4.setLayer(jDesktopPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane4.setLayer(busquedaComboBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap(746, Short.MAX_VALUE)
                .addComponent(busquedaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane4Layout.createSequentialGroup()
                    .addContainerGap(68, Short.MAX_VALUE)
                    .addComponent(jDesktopPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(69, Short.MAX_VALUE)))
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(busquedaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(447, Short.MAX_VALUE))
            .addGroup(jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane4Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDesktopPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Prestamos", jDesktopPane4);

        jToggleButton1.setText("listado de entregas de hoy");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(textPaneCarnet);

        jLabel1.setText("Reportes por estudiante:");

        historial.setText("Historial de prestamos");
        historial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historialActionPerformed(evt);
            }
        });

        activos.setText("prestamos activos");
        activos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activosActionPerformed(evt);
            }
        });

        jLabel2.setText("buscar carnet :");

        jButton1.setText("Prestamos en un intervalo de tiempo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        carreras.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ingenieria", "Medicina", "Derecho", "Arquitectura", "Administracion" }));
        carreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carrerasActionPerformed(evt);
            }
        });

        jButton2.setText("Prestamos por carrera");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        fondos.setText("Calcular Ingresos");
        fondos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fondosActionPerformed(evt);
            }
        });

        jDesktopPane3.setLayer(jToggleButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(historial, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(activos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(date1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(date2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(carreras, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(date11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(date22, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jDateChooser1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jDateChooser2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(fondos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jSeparator3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane3.setLayer(jSeparator4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addComponent(jButton1)
                        .addGap(163, 163, 163))))
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(carreras, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(date11, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fondos, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(date22, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(93, 93, 93))
            .addComponent(jSeparator1)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDesktopPane3Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(historial)
                        .addGap(45, 45, 45)
                        .addComponent(activos))
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jToggleButton1)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(historial)
                        .addComponent(activos))
                    .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jDesktopPane3Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(35, 35, 35)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carreras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fondos))
                .addGap(69, 69, 69))
        );

        jTabbedPane1.addTab("Reportes", jDesktopPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void estudiantesBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estudiantesBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estudiantesBusquedaActionPerformed

    private void nuevoEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoEstudianteActionPerformed
        // TODO add your handling code here:
        ventanaNuevoEst();
    }//GEN-LAST:event_nuevoEstudianteActionPerformed

    private void tablaStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaStudentsMouseClicked
        // TODO add your handling code here:
        this.editarEstudianteBt.setEnabled(true);
        this.eliminarEstudianteBt.setEnabled(true);
        int fila = tablaStudents.getSelectedRow();
        String carnet = (String) tablaStudents.getValueAt(fila, 1);
        labelBusqueda.setText("" + carnet);
        for (int i = 0; i < PersistenciaDeDatos.estudiantes.size(); i++) {
            if (PersistenciaDeDatos.estudiantes.get(i).getCarnet() == (Integer.parseInt(carnet))) {
                this.estudianteEdit = PersistenciaDeDatos.estudiantes.get(i);
                i = PersistenciaDeDatos.estudiantes.size();

            }
        }

    }//GEN-LAST:event_tablaStudentsMouseClicked

    private void tablaStudentsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaStudentsKeyPressed

    }//GEN-LAST:event_tablaStudentsKeyPressed

    private void nuevoLibroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoLibroButtonActionPerformed
        // TODO add your handling code here:
        ventanaNuevoLibro();
    }//GEN-LAST:event_nuevoLibroButtonActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void tablaLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLibrosMouseClicked
        // TODO add your handling code here:
        this.editarLibro.setEnabled(true);
        this.eliminarLibro.setEnabled(true);
        int fila = tablaLibros.getSelectedRow();
        String codigo = (String) tablaLibros.getValueAt(fila, 3);
        labelBusquedaLibro.setText("" + codigo);
        //---------------------LIBRO EDITAR--------------------//
        for (int i = 0; i < PersistenciaDeDatos.biblio.size(); i++) {
            if (PersistenciaDeDatos.biblio.get(i).getCodigo().equals(codigo)) {
                this.libroEdit = PersistenciaDeDatos.biblio.get(i);
                i = PersistenciaDeDatos.biblio.size();

            }
        }
    }//GEN-LAST:event_tablaLibrosMouseClicked

    private void tablaLibrosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaLibrosKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaLibrosKeyPressed

    private void nuevoPrestamosBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoPrestamosBtActionPerformed
        // TODO add your handling code here:
        ventanaNuevoPestamo();


    }//GEN-LAST:event_nuevoPrestamosBtActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void eliminarPrestamosBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPrestamosBtMouseClicked
    }//GEN-LAST:event_eliminarPrestamosBtMouseClicked

    private void editarEstudianteBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarEstudianteBtActionPerformed
        // TODO add your handling code here:
        NuevoEstudiante editarEst = new NuevoEstudiante(true, estudianteEdit, this.tablaStudents);
        editarEst.setVisible(true);
        editarEst.setResizable(true);
        editarEst.setLocationRelativeTo(null);
    }//GEN-LAST:event_editarEstudianteBtActionPerformed

    private void eliminarEstudianteBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarEstudianteBtActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        int result = JOptionPane.showConfirmDialog(jFrame, "Desea eliminar el estudiante: " + estudianteEdit.getCarnet());
        if (result == 0) {
            for (int i = 0; i < PersistenciaDeDatos.estudiantes.size(); i++) {
                if (PersistenciaDeDatos.estudiantes.get(i).getCarnet() == (estudianteEdit.getCarnet())) {
                    PersistenciaDeDatos.estudiantes.remove(i);
                    i = PersistenciaDeDatos.estudiantes.size();
                    ControlDatosEstudiante control = new ControlDatosEstudiante();
                    control.llenarTablaEstudiantes(this.tablaStudents);
                    SaveAndReaderBinary s = new SaveAndReaderBinary();
                    s.guardarArchivoBinario();
                }

            }
        } else if (result == 1) {

        } else {

        }
    }//GEN-LAST:event_eliminarEstudianteBtActionPerformed

    private void editarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarLibroActionPerformed
        // TODO add your handling code here:
        NuevoLibro editarLibro = new NuevoLibro(true, libroEdit, this.tablaLibros);
        editarLibro.setVisible(true);
        editarLibro.setResizable(true);
        editarLibro.setLocationRelativeTo(null);
    }//GEN-LAST:event_editarLibroActionPerformed

    private void eliminarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarLibroActionPerformed
        // TODO add your handling code here:
        JFrame jFrame = new JFrame();
        int result = JOptionPane.showConfirmDialog(jFrame, "Desea eliminar el libro: " + libroEdit.getCodigo());
        if (result == 0) {
            for (int i = 0; i < PersistenciaDeDatos.biblio.size(); i++) {
                if (PersistenciaDeDatos.biblio.get(i).getCodigo().equals(libroEdit.getCodigo())) {
                    PersistenciaDeDatos.biblio.remove(i);
                    i = PersistenciaDeDatos.biblio.size();
                    ControlDatosLibros controlDatosLibro = new ControlDatosLibros();
                    controlDatosLibro.llenarTablaLibros(this.tablaLibros);
                    SaveAndReaderBinary s = new SaveAndReaderBinary();
                    s.guardarArchivoBinario();
                }

            }
        } else if (result == 1) {

        } else {

        }
    }//GEN-LAST:event_eliminarLibroActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        ArrayList<Prestamo> prestamos = this.reporte.recorrerPrestamos();
        if (!prestamos.isEmpty()) {
            TablaReporte tablaR = new TablaReporte(this.reporte, this);
            this.setVisible(false);
            tablaR.setVisible(true);
            tablaR.recorrerPrestamos();
        } else {
            JOptionPane.showMessageDialog(null, "No hay prestamos que se entreguen hoy", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void historialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historialActionPerformed
        int carnet = 0;
        try {
            carnet = Integer.parseInt(this.textPaneCarnet.getText());
            ArrayList<Prestamo> historial = this.reporte.historialEstudiante(carnet);
            if (!historial.isEmpty()) {
                TablaReporte tablaR = new TablaReporte(this.reporte, this);
                this.setVisible(false);
                tablaR.setVisible(true);
                tablaR.mostrarHistorial(carnet);
            } else {
                JOptionPane.showMessageDialog(null, "El estudiante aún tiene un historial", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el numero de carnet para realizar la busqueda", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_historialActionPerformed

    private void activosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activosActionPerformed

        int carnet = 0;
        try {
            carnet = Integer.parseInt(this.textPaneCarnet.getText());
            ArrayList<Prestamo> activos = reporte.prestamosEstudiante(carnet);
            if (!activos.isEmpty()) {
                TablaReporte tablaR = new TablaReporte(this.reporte, this);
                this.setVisible(false);
                tablaR.setVisible(true);
                tablaR.mostrarActivos(carnet);
            } else {
                JOptionPane.showMessageDialog(null, "El estudiante no tiene prestamos activos", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el numero de carnet para realizar la busqueda", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_activosActionPerformed

    private void eliminarPrestamosBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPrestamosBtActionPerformed
        //ventana recibir el libro

        libroRegresado();
        actualizarTabla();

    }//GEN-LAST:event_eliminarPrestamosBtActionPerformed

    private void tablaPrestamosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPrestamosMouseClicked
        // TODO add your handling code here:
        this.eliminarPrestamosBt.setEnabled(true);
        int fila = tablaPrestamos.getSelectedRow();
//        String codigo = (String) tablaPrestamos.getValueAt(fila, 0).toString();
//        String carnet = (String) tablaPrestamos.getValueAt(fila, 1).toString();
//        String fecha = (String) tablaPrestamos.getValueAt(fila, 2).toString();
//        regresoDeLibro rg = new regresoDeLibro(codigo, carnet, fecha);

    }//GEN-LAST:event_tablaPrestamosMouseClicked

    private void tablaPrestamosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaPrestamosKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tablaPrestamosKeyPressed

    private void busquedaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaComboBoxActionPerformed
        filtroItemPres();
    }//GEN-LAST:event_busquedaComboBoxActionPerformed

    private void busqueaComboEstudiantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busqueaComboEstudiantesActionPerformed
        // TODO add your handling code here:
        filtroItemEstuden();
    }//GEN-LAST:event_busqueaComboEstudiantesActionPerformed

    private void librosComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_librosComboActionPerformed
        // TODO add your handling code here:
        filtroItemLibros();
    }//GEN-LAST:event_librosComboActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Date dateUno = date1.getDate();
        Date dateDos = date2.getDate();
        ArrayList<Prestamo> intervalo;
        try {
            if (dateUno == null && dateDos == null) {
                TablaReporte tablaR = new TablaReporte(this.reporte, this);
                this.setVisible(false);
                tablaR.setVisible(true);
                tablaR.mostrarPrestamos();
            } else if (dateUno != null && dateDos != null) {
                intervalo = this.reporte.prestamosEnIntervalo(dateUno, dateDos);
                if (intervalo.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "No se han realizado prestamos en esas fechas", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    TablaReporte tablaR = new TablaReporte(this.reporte, this);
                    this.setVisible(false);
                    tablaR.setVisible(true);
                    tablaR.mostrarSegunIntervalo(dateUno, dateDos);
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void carrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carrerasActionPerformed
        String carreraS = carreras.getSelectedItem().toString();
        switch (carreraS) {
            case "Ingenieria":
                carrera = 1;
                break;
            case "Medicina":
                carrera = 2;
                break;
            case "Derecho":
                carrera = 3;
                break;
            case "Arquitectura":
                carrera = 4;
                break;
            case "Administracion":
                carrera = 5;
                break;
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_carrerasActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Date dateUno = date11.getDate();
        Date dateDos = date22.getDate();
        if (dateUno != null && dateDos != null) {
            this.reporte.clasificarPrestamos(carrera);
            try {
                TablaReporte tablaR = new TablaReporte(this.reporte, this);
                this.setVisible(false);
                tablaR.setVisible(true);
                tablaR.mostrarCarreraI(dateUno, dateDos, carrera);
            } catch (ParseException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.reporte.mostrarInter();
        } else {
            this.reporte.clasificarPrestamos(carrera);
            TablaReporte tablaR = new TablaReporte(this.reporte, this);
            this.setVisible(false);
            tablaR.setVisible(true);
            try {
                tablaR.mostrarCarrera(carrera);
            } catch (ParseException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("mostrar todos los reportes");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fondosActionPerformed

    }//GEN-LAST:event_fondosActionPerformed

    private void fondosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Date dateUno = this.jDateChooser1.getDate();
        Date dateDos = this.jDateChooser2.getDate();
        try {
            Fondos fondos = new Fondos(this, this.reporte);
            this.setVisible(false);
            fondos.setVisible(true);
            fondos.mostrarFondos(dateUno, dateDos);
        } catch (ParseException ex) {
            Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public void ventanaNuevoEst() {
        NuevoEstudiante ne = new NuevoEstudiante(false, null, tablaStudents);
        ne.setVisible(true);
        ne.setResizable(false);
        ne.setLocationRelativeTo(null);
    }

    public void ventanaNuevoLibro() {
        NuevoLibro nuevoLibro = new NuevoLibro(false, null, tablaLibros);
        nuevoLibro.setVisible(true);
        nuevoLibro.setResizable(false);
        nuevoLibro.setLocationRelativeTo(null);
    }

    public void ventanaNuevoPestamo() {
        NuevoPrestamo nuevoP = new NuevoPrestamo(tablaPrestamos, tablaLibros);
        nuevoP.IniciarFecha();
        nuevoP.setVisible(true);
        nuevoP.setResizable(false);
        nuevoP.setLocationRelativeTo(null);
    }

    public void libroRegresado() {
        regresoDeLibro regreso = new regresoDeLibro(tablaPrestamos, tablaLibros);

        int filaSeleccionada = tablaPrestamos.getSelectedRow();
        if (filaSeleccionada != -1) {
            String codigo = tablaPrestamos.getValueAt(filaSeleccionada, 0).toString();
            String carnet = tablaPrestamos.getValueAt(filaSeleccionada, 1).toString();
            String fecha = tablaPrestamos.getValueAt(filaSeleccionada, 2).toString();
            regreso.llenado(codigo, carnet, fecha);
            regreso.diasEfectivos();
            regreso.setVisible(true);
            regreso.setResizable(false);
            regreso.setLocationRelativeTo(null);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void filtroPrestamo(int numeroFiltro, String busqueda, int validacion) {
        DefaultTableModel modelo = (DefaultTableModel) tablaPrestamos.getModel();

        if (validacion == 0) {
            TableRowSorter<DefaultTableModel> tablaFiltrada = new TableRowSorter<>(modelo);
            tablaPrestamos.setRowSorter(tablaFiltrada);
            tablaFiltrada.setRowFilter(RowFilter.regexFilter(busqueda, numeroFiltro));
            tablaPrestamos.repaint();
        } else if (validacion == -1) {
            tablaPrestamos.setRowSorter(null); // Elimina cualquier filtro aplicado
            tablaPrestamos.setModel(modelo); // Restaura el modelo original de la tabla
            tablaPrestamos.repaint();
        }
    }

    public void filtroItemPres() {
        System.out.println("si entra en en filtro pres");
        int validacion = -1;
        int numeroFiltro = -1;
        String busqueda = jTextField3.getText();
        // Obtener el número de filtro según la opción seleccionada en el ComboBox
        String seleccion = busquedaComboBox.getSelectedItem().toString();
        switch (seleccion) {
            case "Todos Los Registros":
                validacion = -1;
                break;
            case "Codigo del Libro":
                validacion = 0;
                numeroFiltro = 0;
                break;
            case "Carnet":
                validacion = 0;
                numeroFiltro = 1;
                break;
            case "Fecha":
                validacion = 0;
                numeroFiltro = 2;
                break;
            default:
                System.out.println("Opción no válida");
                break;
        }

        // Aplicar el filtro
        filtroPrestamo(numeroFiltro, busqueda, validacion);

    }
    //aca esta el filtro para los estudiantes

    public void filtroEstudiante(int numeroFiltro, String busqueda, int validacion) {
        DefaultTableModel modelo = (DefaultTableModel) tablaStudents.getModel();

        if (validacion == 0) {
            TableRowSorter<DefaultTableModel> tablaFiltrada = new TableRowSorter<>(modelo);
            tablaStudents.setRowSorter(tablaFiltrada);
            tablaFiltrada.setRowFilter(RowFilter.regexFilter(busqueda, numeroFiltro));
            tablaStudents.repaint();
        } else if (validacion == -1) {
            tablaStudents.setRowSorter(null); // Elimina cualquier filtro aplicado
            tablaStudents.setModel(modelo); // Restaura el modelo original de la tabla
            tablaStudents.repaint();
        }
    }

    public void filtroItemEstuden() {
        int validacion = -1;
        int numeroFiltro = -1;
        String busqueda = estudiantesBusqueda.getText();
        // Obtener el número de filtro según la opción seleccionada en el ComboBox
        String seleccion = busqueaComboEstudiantes.getSelectedItem().toString();
        switch (seleccion) {
            case "Todos Los Registros":
                validacion = -1;
                break;
            case "Carnet":
                validacion = 0;
                numeroFiltro = 1;
                break;
            case "Nombre":
                validacion = 0;
                numeroFiltro = 2;
                break;
            case "Carrera":
                validacion = 0;
                numeroFiltro = 3;
                break;
            case "Fecha De Nacimiento":
                validacion = 0;
                numeroFiltro = 4;
                break;
            default:
                System.out.println("Opción no válida");
                break;
        }
        System.out.println(numeroFiltro + busqueda + validacion);
        // Aplicar el filtro
        filtroEstudiante(numeroFiltro, busqueda, validacion);
    }

    //aca esta el filtro para libros
    public void filtroLibros(int numeroFiltro, String busqueda, int validacion) {
        DefaultTableModel modelo = (DefaultTableModel) tablaLibros.getModel();

        if (validacion == 0) {
            TableRowSorter<DefaultTableModel> tablaFiltrada = new TableRowSorter<>(modelo);
            tablaLibros.setRowSorter(tablaFiltrada);
            tablaFiltrada.setRowFilter(RowFilter.regexFilter(busqueda, numeroFiltro));
            tablaLibros.repaint();
        } else if (validacion == -1) {
            tablaLibros.setRowSorter(null); // Elimina cualquier filtro aplicado
            tablaLibros.setModel(modelo); // Restaura el modelo original de la tabla
            tablaLibros.repaint();
        }
    }

    public void filtroItemLibros() {
        int validacion = -1;
        int numeroFiltro = -1;
        String busqueda = jTextField2.getText();
        // Obtener el número de filtro según la opción seleccionada en el ComboBox
        String seleccion = librosCombo.getSelectedItem().toString();
        switch (seleccion) {
            case "Todos Los Registros":
                validacion = -1;
                break;
            case "Titulo":
                validacion = 0;
                numeroFiltro = 1;
                break;
            case "Autor":
                validacion = 0;
                numeroFiltro = 2;
                break;
            case "Código":
                validacion = 0;
                numeroFiltro = 3;
                break;
            case "Cantidad de Copias":
                validacion = 0;
                numeroFiltro = 4;
                break;
            case "Feche de Publicación":
                validacion = 0;
                numeroFiltro = 5;
                break;
            case "Editorial":
                validacion = 0;
                numeroFiltro = 6;
                break;
            default:
                System.out.println("Opción no válida");
                break;
        }
        // Aplicar el filtro
        filtroLibros(numeroFiltro, busqueda, validacion);

    }

    public void actualizarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tablaPrestamos.getModel();
        tablaPrestamos.setModel(modelo);
        tablaPrestamos.setRowSorter(null);

    }

    public JTable getTablaPrestamos() {
        return tablaPrestamos;
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activos;
    private javax.swing.JComboBox<String> busqueaComboEstudiantes;
    private javax.swing.JComboBox<String> busquedaComboBox;
    private javax.swing.JComboBox<String> carreras;
    private com.toedter.calendar.JDateChooser date1;
    private com.toedter.calendar.JDateChooser date11;
    private com.toedter.calendar.JDateChooser date2;
    private com.toedter.calendar.JDateChooser date22;
    private javax.swing.JButton editarEstudianteBt;
    private javax.swing.JButton editarLibro;
    private javax.swing.JButton eliminarEstudianteBt;
    private javax.swing.JButton eliminarLibro;
    private javax.swing.JButton eliminarPrestamosBt;
    private javax.swing.JTextField estudiantesBusqueda;
    private javax.swing.JButton fondos;
    private javax.swing.JButton historial;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JDesktopPane jDesktopPane5;
    private javax.swing.JDesktopPane jDesktopPane6;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel labelBusqueda;
    private javax.swing.JLabel labelBusquedaLibro;
    private javax.swing.JLabel labelBusquedaPestamo;
    private javax.swing.JComboBox<String> librosCombo;
    private javax.swing.JButton nuevoEstudiante;
    private javax.swing.JButton nuevoLibroButton;
    private javax.swing.JButton nuevoPrestamosBt;
    private javax.swing.JTable tablaLibros;
    private javax.swing.JTable tablaPrestamos;
    private javax.swing.JTable tablaStudents;
    private javax.swing.JTextPane textPaneCarnet;
    // End of variables declaration//GEN-END:variables
}
